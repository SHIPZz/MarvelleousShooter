//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Active = 0;
    public const int AnimancerAnimator = 1;
    public const int Damage = 2;
    public const int Destructed = 3;
    public const int Direction = 4;
    public const int EffectPlayer = 5;
    public const int EntityLink = 6;
    public const int Id = 7;
    public const int InitialLocalPosition = 8;
    public const int LayerMask = 9;
    public const int Parent = 10;
    public const int Rotation = 11;
    public const int SelfDestructTimer = 12;
    public const int SpriteRenderer = 13;
    public const int Transform = 14;
    public const int View = 15;
    public const int ViewPath = 16;
    public const int ViewPrefab = 17;
    public const int WorldPosition = 18;
    public const int AnimationDuration = 19;
    public const int AnimationFadeDuration = 20;
    public const int BaseCameraRotation = 21;
    public const int CameraHolder = 22;
    public const int CameraRotationSharpness = 23;
    public const int CameraRotationSpeed = 24;
    public const int FinalRecoilRotation = 25;
    public const int MainCamera = 26;
    public const int MaxCameraRotation = 27;
    public const int MinCameraRotation = 28;
    public const int BaseStats = 29;
    public const int StatChange = 30;
    public const int StatModifiers = 31;
    public const int GroundDepth = 32;
    public const int GroundDetectionMask = 33;
    public const int GroundDetectionTransform = 34;
    public const int GroundHitCollider = 35;
    public const int GroundRadius = 36;
    public const int GroundTouchedAngle = 37;
    public const int NeedGroundDetection = 38;
    public const int Cooldown = 39;
    public const int CooldownLeft = 40;
    public const int CooldownUp = 41;
    public const int Dead = 42;
    public const int DeathAnimationDuration = 43;
    public const int DeathProcessing = 44;
    public const int ApplyEffectOnEndPointReached = 45;
    public const int ApplyStatusOnEndPointReached = 46;
    public const int DamageEffect = 47;
    public const int Effect = 48;
    public const int EffectSetups = 49;
    public const int EffectTypeId = 50;
    public const int EffectValue = 51;
    public const int HealEffect = 52;
    public const int Processed = 53;
    public const int ProducerId = 54;
    public const int PullEffect = 55;
    public const int TargetId = 56;
    public const int EnchantHolder = 57;
    public const int EnchantTypeId = 58;
    public const int ExplosiveEnchant = 59;
    public const int HexEnchant = 60;
    public const int PoisonEnchant = 61;
    public const int Enemy = 62;
    public const int FollowDistanceLeft = 63;
    public const int FollowingUp = 64;
    public const int FollowMaxDistance = 65;
    public const int FollowNewCloseTarget = 66;
    public const int FollowTargetId = 67;
    public const int LastFollowTargets = 68;
    public const int ConnectedWithHero = 69;
    public const int CurrentGunId = 70;
    public const int HeroAction = 71;
    public const int Hero = 72;
    public const int HeroGun = 73;
    public const int Alive = 74;
    public const int CurrentHp = 75;
    public const int HpRestored = 76;
    public const int MaxHp = 77;
    public const int RestoreHp = 78;
    public const int Collected = 79;
    public const int Experience = 80;
    public const int LootTypeId = 81;
    public const int PickupRadius = 82;
    public const int Pullable = 83;
    public const int Pulling = 84;
    public const int AirSpeed = 85;
    public const int AnimationCurve = 86;
    public const int CanRun = 87;
    public const int Damping = 88;
    public const int DestructOnMovingFinished = 89;
    public const int ElapsedTime = 90;
    public const int EndPoint = 91;
    public const int EndPointReached = 92;
    public const int FinalVelocity = 93;
    public const int Gravity = 94;
    public const int HasIdleFocus = 95;
    public const int HeightUpdated = 96;
    public const int HorizontalRotation = 97;
    public const int Idle = 98;
    public const int IdleAvailable = 99;
    public const int IdleFocusAvailable = 100;
    public const int IdleFocusRequested = 101;
    public const int IdleJumpMultiplier = 102;
    public const int InitialSpeed = 103;
    public const int JumpForce = 104;
    public const int Jumping = 105;
    public const int JumpingRequested = 106;
    public const int NoGroundTime = 107;
    public const int JumpVelocity = 108;
    public const int Movable = 109;
    public const int MovementAnimAvailable = 110;
    public const int MovementSpeed = 111;
    public const int Moving = 112;
    public const int MovingAvailable = 113;
    public const int MovingRequested = 114;
    public const int NeedRandomEndPoint = 115;
    public const int NoGround = 116;
    public const int OnGround = 117;
    public const int OrbitCenterFollowTarget = 118;
    public const int OrbitCenterPosition = 119;
    public const int OrbitPhase = 120;
    public const int OrbitRadius = 121;
    public const int PositionFixed = 122;
    public const int RotateAlongDirection = 123;
    public const int RunJumpMultiplier = 124;
    public const int Running = 125;
    public const int RunningAnimAvailable = 126;
    public const int RunningAvailable = 127;
    public const int RunSpeed = 128;
    public const int Speed = 129;
    public const int StartHeight = 130;
    public const int TurnAlongDirection = 131;
    public const int UpdateHeightBySinCurve = 132;
    public const int VerticalRotation = 133;
    public const int VerticalVelocity = 134;
    public const int Walking = 135;
    public const int WalkJumpMultiplier = 136;
    public const int DestructOnMaxPullTargetReached = 137;
    public const int MaxPullTargetHold = 138;
    public const int MinCountToPullTargets = 139;
    public const int PullAnchorTargetId = 140;
    public const int PullingDetector = 141;
    public const int PullInRadius = 142;
    public const int PullProducerId = 143;
    public const int PullTargetConsistently = 144;
    public const int PullTargetHolder = 145;
    public const int PullTargetHolderStatuses = 146;
    public const int PullTargetLayerMask = 147;
    public const int PullTargetList = 148;
    public const int AvailableShoots = 149;
    public const int CanRaycast = 150;
    public const int CanRunAndShoot = 151;
    public const int CurrentShootTypeId = 152;
    public const int EmptyGun = 153;
    public const int GunHasFocus = 154;
    public const int GunInputKey = 155;
    public const int HitEffectTypeId = 156;
    public const int Hits = 157;
    public const int MoveGunDuration = 158;
    public const int MoveGunPosition = 159;
    public const int MoveRecoilTween = 160;
    public const int OwnerId = 161;
    public const int Shootable = 162;
    public const int ShootAnimationProcessing = 163;
    public const int ShootCooldown = 164;
    public const int ShootCooldownLeft = 165;
    public const int ShootCooldownProcessing = 166;
    public const int ShootCooldownUp = 167;
    public const int ShootDistance = 168;
    public const int ShootHolder = 169;
    public const int Shooting = 170;
    public const int ShootingAvailable = 171;
    public const int ShootingContinuously = 172;
    public const int ShootingRequested = 173;
    public const int ShootingStarted = 174;
    public const int ShootTypeId = 175;
    public const int ShootWithoutAmmo = 176;
    public const int Aimable = 177;
    public const int Aiming = 178;
    public const int AimingAvailable = 179;
    public const int AimingRequested = 180;
    public const int NotAimable = 181;
    public const int AmmoAvailable = 182;
    public const int AmmoCount = 183;
    public const int AmmoCountLeft = 184;
    public const int AmmoDecreased = 185;
    public const int DoubleShooting = 186;
    public const int DoubleShootingAvailable = 187;
    public const int DoubleShootingProcessed = 188;
    public const int DoubleShootingProcessing = 189;
    public const int DoubleShootRequested = 190;
    public const int AimJumpMultiplier = 191;
    public const int AimMultiplier = 192;
    public const int CurrentRecoil = 193;
    public const int HasRecoil = 194;
    public const int HorizontalRecoil = 195;
    public const int JumpMultiplier = 196;
    public const int MaxHorizontalRecoilOnJump = 197;
    public const int MinHorizontalRecoilOnJump = 198;
    public const int MinVerticalRecoilOnJump = 199;
    public const int Patterns = 200;
    public const int RecoilData = 201;
    public const int RecoilPatternIndex = 202;
    public const int RecoilRecoverySpeed = 203;
    public const int RecoilRotation = 204;
    public const int RecoilSpeed = 205;
    public const int TargetRecoil = 206;
    public const int VerticalRecoil = 207;
    public const int Reloadable = 208;
    public const int Reloading = 209;
    public const int ReloadingFinished = 210;
    public const int ReloadRequested = 211;
    public const int ReloadTime = 212;
    public const int ReloadTimeEnded = 213;
    public const int ReloadTimeLeft = 214;
    public const int HeroSwitchable = 215;
    public const int HidingProcessed = 216;
    public const int HidingProcessing = 217;
    public const int SameGunSelected = 218;
    public const int ShootSwitchingAvailable = 219;
    public const int ShootSwitchingReady = 220;
    public const int ShootSwitchingRequested = 221;
    public const int ShowingProcessed = 222;
    public const int ShowingProcessing = 223;
    public const int Switchable = 224;
    public const int SwitchingProcessed = 225;
    public const int SwitchingProcessing = 226;
    public const int SwitchingStarted = 227;
    public const int TargetInputGun = 228;
    public const int TargetSwitchGunId = 229;
    public const int Affected = 230;
    public const int Applied = 231;
    public const int ApplierStatusLink = 232;
    public const int CurrentHpStatus = 233;
    public const int Duration = 234;
    public const int Freeze = 235;
    public const int Invulnerable = 236;
    public const int InvulnerableStatus = 237;
    public const int MaxHpIncrease = 238;
    public const int Period = 239;
    public const int PeriodicDamageStatus = 240;
    public const int Poison = 241;
    public const int ScaleIncrease = 242;
    public const int SpeedUp = 243;
    public const int Status = 244;
    public const int StatusCreator = 245;
    public const int StatusSetups = 246;
    public const int StatusTypeId = 247;
    public const int TimeLeft = 248;
    public const int TimeSinceLastTick = 249;
    public const int Unapplied = 250;
    public const int Vampirism = 251;
    public const int CastDirection = 252;
    public const int CastDistance = 253;
    public const int CastFromCamera = 254;
    public const int CastFromStartPosition = 255;
    public const int CastFromTargetTransform = 256;
    public const int CollectingAvailable = 257;
    public const int CollectingTargetsContinuously = 258;
    public const int CollectTargetsInterval = 259;
    public const int CollectTargetsLayerMask = 260;
    public const int CollectTargetsTimer = 261;
    public const int HitDetected = 262;
    public const int IgnoreBuffer = 263;
    public const int Ignored = 264;
    public const int LastCollectedId = 265;
    public const int OnAnimationEndCast = 266;
    public const int OnAnimationEndCastRequested = 267;
    public const int OverflowProcessedTargetsBuffer = 268;
    public const int ProcessedTargetsBuffer = 269;
    public const int Radius = 270;
    public const int Reached = 271;
    public const int ReadyToCollectOnMovingFinished = 272;
    public const int ReadyToCollectTargets = 273;
    public const int TargetLimit = 274;
    public const int TargetsBuffer = 275;
    public const int ViewActive = 276;

    public const int TotalComponents = 277;

    public static readonly string[] componentNames = {
        "Active",
        "AnimancerAnimator",
        "Damage",
        "Destructed",
        "Direction",
        "EffectPlayer",
        "EntityLink",
        "Id",
        "InitialLocalPosition",
        "LayerMask",
        "Parent",
        "Rotation",
        "SelfDestructTimer",
        "SpriteRenderer",
        "Transform",
        "View",
        "ViewPath",
        "ViewPrefab",
        "WorldPosition",
        "AnimationDuration",
        "AnimationFadeDuration",
        "BaseCameraRotation",
        "CameraHolder",
        "CameraRotationSharpness",
        "CameraRotationSpeed",
        "FinalRecoilRotation",
        "MainCamera",
        "MaxCameraRotation",
        "MinCameraRotation",
        "BaseStats",
        "StatChange",
        "StatModifiers",
        "GroundDepth",
        "GroundDetectionMask",
        "GroundDetectionTransform",
        "GroundHitCollider",
        "GroundRadius",
        "GroundTouchedAngle",
        "NeedGroundDetection",
        "Cooldown",
        "CooldownLeft",
        "CooldownUp",
        "Dead",
        "DeathAnimationDuration",
        "DeathProcessing",
        "ApplyEffectOnEndPointReached",
        "ApplyStatusOnEndPointReached",
        "DamageEffect",
        "Effect",
        "EffectSetups",
        "EffectTypeId",
        "EffectValue",
        "HealEffect",
        "Processed",
        "ProducerId",
        "PullEffect",
        "TargetId",
        "EnchantHolder",
        "EnchantTypeId",
        "ExplosiveEnchant",
        "HexEnchant",
        "PoisonEnchant",
        "Enemy",
        "FollowDistanceLeft",
        "FollowingUp",
        "FollowMaxDistance",
        "FollowNewCloseTarget",
        "FollowTargetId",
        "LastFollowTargets",
        "ConnectedWithHero",
        "CurrentGunId",
        "HeroAction",
        "Hero",
        "HeroGun",
        "Alive",
        "CurrentHp",
        "HpRestored",
        "MaxHp",
        "RestoreHp",
        "Collected",
        "Experience",
        "LootTypeId",
        "PickupRadius",
        "Pullable",
        "Pulling",
        "AirSpeed",
        "AnimationCurve",
        "CanRun",
        "Damping",
        "DestructOnMovingFinished",
        "ElapsedTime",
        "EndPoint",
        "EndPointReached",
        "FinalVelocity",
        "Gravity",
        "HasIdleFocus",
        "HeightUpdated",
        "HorizontalRotation",
        "Idle",
        "IdleAvailable",
        "IdleFocusAvailable",
        "IdleFocusRequested",
        "IdleJumpMultiplier",
        "InitialSpeed",
        "JumpForce",
        "Jumping",
        "JumpingRequested",
        "NoGroundTime",
        "JumpVelocity",
        "Movable",
        "MovementAnimAvailable",
        "MovementSpeed",
        "Moving",
        "MovingAvailable",
        "MovingRequested",
        "NeedRandomEndPoint",
        "NoGround",
        "OnGround",
        "OrbitCenterFollowTarget",
        "OrbitCenterPosition",
        "OrbitPhase",
        "OrbitRadius",
        "PositionFixed",
        "RotateAlongDirection",
        "RunJumpMultiplier",
        "Running",
        "RunningAnimAvailable",
        "RunningAvailable",
        "RunSpeed",
        "Speed",
        "StartHeight",
        "TurnAlongDirection",
        "UpdateHeightBySinCurve",
        "VerticalRotation",
        "VerticalVelocity",
        "Walking",
        "WalkJumpMultiplier",
        "DestructOnMaxPullTargetReached",
        "MaxPullTargetHold",
        "MinCountToPullTargets",
        "PullAnchorTargetId",
        "PullingDetector",
        "PullInRadius",
        "PullProducerId",
        "PullTargetConsistently",
        "PullTargetHolder",
        "PullTargetHolderStatuses",
        "PullTargetLayerMask",
        "PullTargetList",
        "AvailableShoots",
        "CanRaycast",
        "CanRunAndShoot",
        "CurrentShootTypeId",
        "EmptyGun",
        "GunHasFocus",
        "GunInputKey",
        "HitEffectTypeId",
        "Hits",
        "MoveGunDuration",
        "MoveGunPosition",
        "MoveRecoilTween",
        "OwnerId",
        "Shootable",
        "ShootAnimationProcessing",
        "ShootCooldown",
        "ShootCooldownLeft",
        "ShootCooldownProcessing",
        "ShootCooldownUp",
        "ShootDistance",
        "ShootHolder",
        "Shooting",
        "ShootingAvailable",
        "ShootingContinuously",
        "ShootingRequested",
        "ShootingStarted",
        "ShootTypeId",
        "ShootWithoutAmmo",
        "Aimable",
        "Aiming",
        "AimingAvailable",
        "AimingRequested",
        "NotAimable",
        "AmmoAvailable",
        "AmmoCount",
        "AmmoCountLeft",
        "AmmoDecreased",
        "DoubleShooting",
        "DoubleShootingAvailable",
        "DoubleShootingProcessed",
        "DoubleShootingProcessing",
        "DoubleShootRequested",
        "AimJumpMultiplier",
        "AimMultiplier",
        "CurrentRecoil",
        "HasRecoil",
        "HorizontalRecoil",
        "JumpMultiplier",
        "MaxHorizontalRecoilOnJump",
        "MinHorizontalRecoilOnJump",
        "MinVerticalRecoilOnJump",
        "Patterns",
        "RecoilData",
        "RecoilPatternIndex",
        "RecoilRecoverySpeed",
        "RecoilRotation",
        "RecoilSpeed",
        "TargetRecoil",
        "VerticalRecoil",
        "Reloadable",
        "Reloading",
        "ReloadingFinished",
        "ReloadRequested",
        "ReloadTime",
        "ReloadTimeEnded",
        "ReloadTimeLeft",
        "HeroSwitchable",
        "HidingProcessed",
        "HidingProcessing",
        "SameGunSelected",
        "ShootSwitchingAvailable",
        "ShootSwitchingReady",
        "ShootSwitchingRequested",
        "ShowingProcessed",
        "ShowingProcessing",
        "Switchable",
        "SwitchingProcessed",
        "SwitchingProcessing",
        "SwitchingStarted",
        "TargetInputGun",
        "TargetSwitchGunId",
        "Affected",
        "Applied",
        "ApplierStatusLink",
        "CurrentHpStatus",
        "Duration",
        "Freeze",
        "Invulnerable",
        "InvulnerableStatus",
        "MaxHpIncrease",
        "Period",
        "PeriodicDamageStatus",
        "Poison",
        "ScaleIncrease",
        "SpeedUp",
        "Status",
        "StatusCreator",
        "StatusSetups",
        "StatusTypeId",
        "TimeLeft",
        "TimeSinceLastTick",
        "Unapplied",
        "Vampirism",
        "CastDirection",
        "CastDistance",
        "CastFromCamera",
        "CastFromStartPosition",
        "CastFromTargetTransform",
        "CollectingAvailable",
        "CollectingTargetsContinuously",
        "CollectTargetsInterval",
        "CollectTargetsLayerMask",
        "CollectTargetsTimer",
        "HitDetected",
        "IgnoreBuffer",
        "Ignored",
        "LastCollectedId",
        "OnAnimationEndCast",
        "OnAnimationEndCastRequested",
        "OverflowProcessedTargetsBuffer",
        "ProcessedTargetsBuffer",
        "Radius",
        "Reached",
        "ReadyToCollectOnMovingFinished",
        "ReadyToCollectTargets",
        "TargetLimit",
        "TargetsBuffer",
        "ViewActive"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.ECS.Common.Active),
        typeof(Code.ECS.Common.AnimancerAnimator),
        typeof(Code.ECS.Common.Damage),
        typeof(Code.ECS.Common.Destructed),
        typeof(Code.ECS.Common.Direction),
        typeof(Code.ECS.Common.EffectPlayerComponent),
        typeof(Code.ECS.Common.EntityLink),
        typeof(Code.ECS.Common.Id),
        typeof(Code.ECS.Common.InitialLocalPosition),
        typeof(Code.ECS.Common.LayerMaskComponent),
        typeof(Code.ECS.Common.Parent),
        typeof(Code.ECS.Common.Rotation),
        typeof(Code.ECS.Common.SelfDestructTimer),
        typeof(Code.ECS.Common.SpriteRendererComponent),
        typeof(Code.ECS.Common.TransformComponent),
        typeof(Code.ECS.Common.View),
        typeof(Code.ECS.Common.ViewPath),
        typeof(Code.ECS.Common.ViewPrefab),
        typeof(Code.ECS.Common.WorldPosition),
        typeof(Code.ECS.Gameplay.Features.Animations.AnimationDuration),
        typeof(Code.ECS.Gameplay.Features.Animations.AnimationFadeDuration),
        typeof(Code.ECS.Gameplay.Features.Cameras.BaseCameraRotation),
        typeof(Code.ECS.Gameplay.Features.Cameras.CameraHolderComponent),
        typeof(Code.ECS.Gameplay.Features.Cameras.CameraRotationSharpnessComponent),
        typeof(Code.ECS.Gameplay.Features.Cameras.CameraRotationSpeed),
        typeof(Code.ECS.Gameplay.Features.Cameras.FinalRecoilRotation),
        typeof(Code.ECS.Gameplay.Features.Cameras.MainCameraComponent),
        typeof(Code.ECS.Gameplay.Features.Cameras.MaxCameraRotation),
        typeof(Code.ECS.Gameplay.Features.Cameras.MinCameraRotation),
        typeof(Code.ECS.Gameplay.Features.CharacterStats.BaseStats),
        typeof(Code.ECS.Gameplay.Features.CharacterStats.StatChange),
        typeof(Code.ECS.Gameplay.Features.CharacterStats.StatModifiers),
        typeof(Code.ECS.Gameplay.Features.Collisions.GroundDepth),
        typeof(Code.ECS.Gameplay.Features.Collisions.GroundDetectionMask),
        typeof(Code.ECS.Gameplay.Features.Collisions.GroundDetectionTransform),
        typeof(Code.ECS.Gameplay.Features.Collisions.GroundHitCollider),
        typeof(Code.ECS.Gameplay.Features.Collisions.GroundRadius),
        typeof(Code.ECS.Gameplay.Features.Collisions.GroundTouchedAngle),
        typeof(Code.ECS.Gameplay.Features.Collisions.NeedGroundDetection),
        typeof(Code.ECS.Gameplay.Features.Cooldown.Cooldown),
        typeof(Code.ECS.Gameplay.Features.Cooldown.CooldownLeft),
        typeof(Code.ECS.Gameplay.Features.Cooldown.CooldownUp),
        typeof(Code.ECS.Gameplay.Features.Death.Dead),
        typeof(Code.ECS.Gameplay.Features.Death.DeathAnimationDuration),
        typeof(Code.ECS.Gameplay.Features.Death.DeathProcessing),
        typeof(Code.ECS.Gameplay.Features.Effects.ApplyEffectOnEndPointReached),
        typeof(Code.ECS.Gameplay.Features.Effects.ApplyStatusOnEndPointReached),
        typeof(Code.ECS.Gameplay.Features.Effects.DamageEffect),
        typeof(Code.ECS.Gameplay.Features.Effects.EffectComponent),
        typeof(Code.ECS.Gameplay.Features.Effects.EffectSetups),
        typeof(Code.ECS.Gameplay.Features.Effects.EffectTypeIdComponent),
        typeof(Code.ECS.Gameplay.Features.Effects.EffectValue),
        typeof(Code.ECS.Gameplay.Features.Effects.HealEffect),
        typeof(Code.ECS.Gameplay.Features.Effects.Processed),
        typeof(Code.ECS.Gameplay.Features.Effects.ProducerId),
        typeof(Code.ECS.Gameplay.Features.Effects.PullEffect),
        typeof(Code.ECS.Gameplay.Features.Effects.TargetId),
        typeof(Code.ECS.Gameplay.Features.Enchants.EnchantHolderComponent),
        typeof(Code.ECS.Gameplay.Features.Enchants.EnchantTypeIdComponent),
        typeof(Code.ECS.Gameplay.Features.Enchants.ExplosiveEnchant),
        typeof(Code.ECS.Gameplay.Features.Enchants.HexEnchant),
        typeof(Code.ECS.Gameplay.Features.Enchants.PoisonEnchant),
        typeof(Code.ECS.Gameplay.Features.Enemies.Enemy),
        typeof(Code.ECS.Gameplay.Features.Follow.FollowDistanceLeft),
        typeof(Code.ECS.Gameplay.Features.Follow.FollowingUp),
        typeof(Code.ECS.Gameplay.Features.Follow.FollowMaxDistance),
        typeof(Code.ECS.Gameplay.Features.Follow.FollowNewCloseTarget),
        typeof(Code.ECS.Gameplay.Features.Follow.FollowTargetId),
        typeof(Code.ECS.Gameplay.Features.Follow.LastFollowTargets),
        typeof(Code.ECS.Gameplay.Features.Heroes.ConnectedWithHero),
        typeof(Code.ECS.Gameplay.Features.Heroes.CurrentGunId),
        typeof(Code.ECS.Gameplay.Features.Heroes.HeroAction),
        typeof(Code.ECS.Gameplay.Features.Heroes.HeroComponent),
        typeof(Code.ECS.Gameplay.Features.Heroes.HeroGun),
        typeof(Code.ECS.Gameplay.Features.Lifetime.Alive),
        typeof(Code.ECS.Gameplay.Features.Lifetime.CurrentHp),
        typeof(Code.ECS.Gameplay.Features.Lifetime.HpRestored),
        typeof(Code.ECS.Gameplay.Features.Lifetime.MaxHp),
        typeof(Code.ECS.Gameplay.Features.Lifetime.RestoreHp),
        typeof(Code.ECS.Gameplay.Features.Loot.Collected),
        typeof(Code.ECS.Gameplay.Features.Loot.Experience),
        typeof(Code.ECS.Gameplay.Features.Loot.LootTypeIdComponent),
        typeof(Code.ECS.Gameplay.Features.Loot.PickupRadius),
        typeof(Code.ECS.Gameplay.Features.Loot.Pullable),
        typeof(Code.ECS.Gameplay.Features.Loot.Pulling),
        typeof(Code.ECS.Gameplay.Features.Movement.AirSpeed),
        typeof(Code.ECS.Gameplay.Features.Movement.AnimationCurveComponent),
        typeof(Code.ECS.Gameplay.Features.Movement.CanRun),
        typeof(Code.ECS.Gameplay.Features.Movement.Damping),
        typeof(Code.ECS.Gameplay.Features.Movement.DestructOnMovingFinished),
        typeof(Code.ECS.Gameplay.Features.Movement.ElapsedTime),
        typeof(Code.ECS.Gameplay.Features.Movement.EndPoint),
        typeof(Code.ECS.Gameplay.Features.Movement.EndPointReached),
        typeof(Code.ECS.Gameplay.Features.Movement.FinalVelocity),
        typeof(Code.ECS.Gameplay.Features.Movement.GravityComponent),
        typeof(Code.ECS.Gameplay.Features.Movement.HasIdleFocus),
        typeof(Code.ECS.Gameplay.Features.Movement.HeightUpdated),
        typeof(Code.ECS.Gameplay.Features.Movement.HorizontalRotation),
        typeof(Code.ECS.Gameplay.Features.Movement.Idle),
        typeof(Code.ECS.Gameplay.Features.Movement.IdleAvailable),
        typeof(Code.ECS.Gameplay.Features.Movement.IdleFocusAvailable),
        typeof(Code.ECS.Gameplay.Features.Movement.IdleFocusRequested),
        typeof(Code.ECS.Gameplay.Features.Movement.IdleJumpMultiplier),
        typeof(Code.ECS.Gameplay.Features.Movement.InitialSpeed),
        typeof(Code.ECS.Gameplay.Features.Movement.JumpForce),
        typeof(Code.ECS.Gameplay.Features.Movement.Jumping.Jumping),
        typeof(Code.ECS.Gameplay.Features.Movement.Jumping.JumpingRequested),
        typeof(Code.ECS.Gameplay.Features.Movement.Jumping.NoGroundTime),
        typeof(Code.ECS.Gameplay.Features.Movement.JumpVelocity),
        typeof(Code.ECS.Gameplay.Features.Movement.Movable),
        typeof(Code.ECS.Gameplay.Features.Movement.MovementAnimAvailable),
        typeof(Code.ECS.Gameplay.Features.Movement.MovementSpeed),
        typeof(Code.ECS.Gameplay.Features.Movement.Moving),
        typeof(Code.ECS.Gameplay.Features.Movement.MovingAvailable),
        typeof(Code.ECS.Gameplay.Features.Movement.MovingRequested),
        typeof(Code.ECS.Gameplay.Features.Movement.NeedRandomEndPoint),
        typeof(Code.ECS.Gameplay.Features.Movement.NoGround),
        typeof(Code.ECS.Gameplay.Features.Movement.OnGround),
        typeof(Code.ECS.Gameplay.Features.Movement.OrbitCenterFollowTarget),
        typeof(Code.ECS.Gameplay.Features.Movement.OrbitCenterPosition),
        typeof(Code.ECS.Gameplay.Features.Movement.OrbitPhase),
        typeof(Code.ECS.Gameplay.Features.Movement.OrbitRadius),
        typeof(Code.ECS.Gameplay.Features.Movement.PositionFixed),
        typeof(Code.ECS.Gameplay.Features.Movement.RotateAlongDirection),
        typeof(Code.ECS.Gameplay.Features.Movement.RunJumpMultiplier),
        typeof(Code.ECS.Gameplay.Features.Movement.Running),
        typeof(Code.ECS.Gameplay.Features.Movement.RunningAnimAvailable),
        typeof(Code.ECS.Gameplay.Features.Movement.RunningAvailable),
        typeof(Code.ECS.Gameplay.Features.Movement.RunSpeed),
        typeof(Code.ECS.Gameplay.Features.Movement.Speed),
        typeof(Code.ECS.Gameplay.Features.Movement.StartHeight),
        typeof(Code.ECS.Gameplay.Features.Movement.TurnAlongDirection),
        typeof(Code.ECS.Gameplay.Features.Movement.UpdateHeightBySinCurve),
        typeof(Code.ECS.Gameplay.Features.Movement.VerticalRotation),
        typeof(Code.ECS.Gameplay.Features.Movement.VerticalVelocity),
        typeof(Code.ECS.Gameplay.Features.Movement.Walking),
        typeof(Code.ECS.Gameplay.Features.Movement.WalkJumpMultiplier),
        typeof(Code.ECS.Gameplay.Features.Pull.DestructOnMaxPullTargetReached),
        typeof(Code.ECS.Gameplay.Features.Pull.MaxPullTargetHold),
        typeof(Code.ECS.Gameplay.Features.Pull.MinCountToPullTargets),
        typeof(Code.ECS.Gameplay.Features.Pull.PullAnchorTargetId),
        typeof(Code.ECS.Gameplay.Features.Pull.PullingDetector),
        typeof(Code.ECS.Gameplay.Features.Pull.PullInRadius),
        typeof(Code.ECS.Gameplay.Features.Pull.PullProducerId),
        typeof(Code.ECS.Gameplay.Features.Pull.PullTargetConsistently),
        typeof(Code.ECS.Gameplay.Features.Pull.PullTargetHolder),
        typeof(Code.ECS.Gameplay.Features.Pull.PullTargetHolderStatuses),
        typeof(Code.ECS.Gameplay.Features.Pull.PullTargetLayerMask),
        typeof(Code.ECS.Gameplay.Features.Pull.PullTargetList),
        typeof(Code.ECS.Gameplay.Features.Shoots.AvailableShoots),
        typeof(Code.ECS.Gameplay.Features.Shoots.CanRaycast),
        typeof(Code.ECS.Gameplay.Features.Shoots.CanRunAndShoot),
        typeof(Code.ECS.Gameplay.Features.Shoots.CurrentShootTypeId),
        typeof(Code.ECS.Gameplay.Features.Shoots.EmptyGun),
        typeof(Code.ECS.Gameplay.Features.Shoots.GunHasFocus),
        typeof(Code.ECS.Gameplay.Features.Shoots.GunInputKeyComponent),
        typeof(Code.ECS.Gameplay.Features.Shoots.HitEffectTypeId),
        typeof(Code.ECS.Gameplay.Features.Shoots.Hits),
        typeof(Code.ECS.Gameplay.Features.Shoots.MoveGunDuration),
        typeof(Code.ECS.Gameplay.Features.Shoots.MoveGunPosition),
        typeof(Code.ECS.Gameplay.Features.Shoots.MoveRecoilTween),
        typeof(Code.ECS.Gameplay.Features.Shoots.OwnerId),
        typeof(Code.ECS.Gameplay.Features.Shoots.Shootable),
        typeof(Code.ECS.Gameplay.Features.Shoots.ShootAnimationProcessing),
        typeof(Code.ECS.Gameplay.Features.Shoots.ShootCooldown),
        typeof(Code.ECS.Gameplay.Features.Shoots.ShootCooldownLeft),
        typeof(Code.ECS.Gameplay.Features.Shoots.ShootCooldownProcessing),
        typeof(Code.ECS.Gameplay.Features.Shoots.ShootCooldownUp),
        typeof(Code.ECS.Gameplay.Features.Shoots.ShootDistance),
        typeof(Code.ECS.Gameplay.Features.Shoots.ShootHolder),
        typeof(Code.ECS.Gameplay.Features.Shoots.Shooting),
        typeof(Code.ECS.Gameplay.Features.Shoots.ShootingAvailable),
        typeof(Code.ECS.Gameplay.Features.Shoots.ShootingContinuously),
        typeof(Code.ECS.Gameplay.Features.Shoots.ShootingRequested),
        typeof(Code.ECS.Gameplay.Features.Shoots.ShootingStarted),
        typeof(Code.ECS.Gameplay.Features.Shoots.ShootTypeIdComponent),
        typeof(Code.ECS.Gameplay.Features.Shoots.ShootWithoutAmmo),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Aiming.Aimable),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Aiming.Aiming),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Aiming.AimingAvailable),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Aiming.AimingRequested),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Aiming.NotAimable),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Ammo.AmmoAvailable),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Ammo.AmmoCount),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Ammo.AmmoCountLeft),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Ammo.AmmoDecreased),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.DoubleShoots.DoubleShooting),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.DoubleShoots.DoubleShootingAvailable),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.DoubleShoots.DoubleShootingProcessed),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.DoubleShoots.DoubleShootingProcessing),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.DoubleShoots.DoubleShootRequested),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.AimJumpMultiplier),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.AimMultiplier),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.CurrentRecoil),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.HasRecoil),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.HorizontalRecoil),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.JumpMultiplier),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.MaxHorizontalRecoilOnJump),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.MinHorizontalRecoilOnJump),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.MinVerticalRecoilOnJump),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.Patterns),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.RecoilDataComponent),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.RecoilPatternIndex),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.RecoilRecoverySpeed),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.RecoilRotation),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.RecoilSpeed),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.TargetRecoil),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.VerticalRecoil),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Reload.Reloadable),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Reload.Reloading),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Reload.ReloadingFinished),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Reload.ReloadRequested),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Reload.ReloadTime),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Reload.ReloadTimeEnded),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Reload.ReloadTimeLeft),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Switching.HeroSwitchable),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Switching.HidingProcessed),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Switching.HidingProcessing),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Switching.SameGunSelected),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Switching.ShootSwitchingAvailable),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Switching.ShootSwitchingReady),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Switching.ShootSwitchingRequested),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Switching.ShowingProcessed),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Switching.ShowingProcessing),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Switching.Switchable),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Switching.SwitchingProcessed),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Switching.SwitchingProcessing),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Switching.SwitchingStarted),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Switching.TargetInputGun),
        typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Switching.TargetSwitchGunId),
        typeof(Code.ECS.Gameplay.Features.Statuses.Affected),
        typeof(Code.ECS.Gameplay.Features.Statuses.Applied),
        typeof(Code.ECS.Gameplay.Features.Statuses.ApplierStatusLink),
        typeof(Code.ECS.Gameplay.Features.Statuses.CurrentHpStatus),
        typeof(Code.ECS.Gameplay.Features.Statuses.Duration),
        typeof(Code.ECS.Gameplay.Features.Statuses.Freeze),
        typeof(Code.ECS.Gameplay.Features.Statuses.Invulnerable),
        typeof(Code.ECS.Gameplay.Features.Statuses.InvulnerableStatus),
        typeof(Code.ECS.Gameplay.Features.Statuses.MaxHpIncrease),
        typeof(Code.ECS.Gameplay.Features.Statuses.Period),
        typeof(Code.ECS.Gameplay.Features.Statuses.PeriodicDamageStatus),
        typeof(Code.ECS.Gameplay.Features.Statuses.Poison),
        typeof(Code.ECS.Gameplay.Features.Statuses.ScaleIncrease),
        typeof(Code.ECS.Gameplay.Features.Statuses.SpeedUp),
        typeof(Code.ECS.Gameplay.Features.Statuses.Status),
        typeof(Code.ECS.Gameplay.Features.Statuses.StatusCreator),
        typeof(Code.ECS.Gameplay.Features.Statuses.StatusSetupsComponent),
        typeof(Code.ECS.Gameplay.Features.Statuses.StatusTypeIdComponent),
        typeof(Code.ECS.Gameplay.Features.Statuses.TimeLeft),
        typeof(Code.ECS.Gameplay.Features.Statuses.TimeSinceLastTick),
        typeof(Code.ECS.Gameplay.Features.Statuses.Unapplied),
        typeof(Code.ECS.Gameplay.Features.Statuses.Vampirism),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.CastDirection),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.CastDistance),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.CastFromCamera),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.CastFromStartPosition),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.CastFromTargetTransform),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.CollectingAvailable),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.CollectingTargetsContinuously),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.CollectTargetsInterval),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.CollectTargetsLayerMask),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.CollectTargetsTimer),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.HitDetected),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.IgnoreBuffer),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.Ignored),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.LastCollectedId),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.OnAnimationEndCast),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.OnAnimationEndCastRequested),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.OverflowProcessedTargetsBuffer),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.ProcessedTargetsBuffer),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.Radius),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.Reached),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.ReadyToCollectOnMovingFinished),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.ReadyToCollectTargets),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.TargetLimit),
        typeof(Code.ECS.Gameplay.Features.TargetCollection.TargetsBuffer),
        typeof(Code.ECS.Gameplay.Features.ViewActive.ViewActive)
    };
}
