//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRecoilDuration;

    public static Entitas.IMatcher<GameEntity> RecoilDuration {
        get {
            if (_matcherRecoilDuration == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RecoilDuration);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRecoilDuration = matcher;
            }

            return _matcherRecoilDuration;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.RecoilDuration recoilDuration { get { return (Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.RecoilDuration)GetComponent(GameComponentsLookup.RecoilDuration); } }
    public float RecoilDuration { get { return recoilDuration.Value; } }
    public bool hasRecoilDuration { get { return HasComponent(GameComponentsLookup.RecoilDuration); } }

    public GameEntity AddRecoilDuration(float newValue) {
        var index = GameComponentsLookup.RecoilDuration;
        var component = (Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.RecoilDuration)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.RecoilDuration));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceRecoilDuration(float newValue) {
        var index = GameComponentsLookup.RecoilDuration;
        var component = (Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.RecoilDuration)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.RecoilDuration));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveRecoilDuration() {
        RemoveComponent(GameComponentsLookup.RecoilDuration);
        return this;
    }
}
