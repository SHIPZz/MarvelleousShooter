//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWalkJumpMultiplier;

    public static Entitas.IMatcher<GameEntity> WalkJumpMultiplier {
        get {
            if (_matcherWalkJumpMultiplier == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WalkJumpMultiplier);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWalkJumpMultiplier = matcher;
            }

            return _matcherWalkJumpMultiplier;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Movement.WalkJumpMultiplier walkJumpMultiplier { get { return (Code.ECS.Gameplay.Features.Movement.WalkJumpMultiplier)GetComponent(GameComponentsLookup.WalkJumpMultiplier); } }
    public float WalkJumpMultiplier { get { return walkJumpMultiplier.Value; } }
    public bool hasWalkJumpMultiplier { get { return HasComponent(GameComponentsLookup.WalkJumpMultiplier); } }

    public GameEntity AddWalkJumpMultiplier(float newValue) {
        var index = GameComponentsLookup.WalkJumpMultiplier;
        var component = (Code.ECS.Gameplay.Features.Movement.WalkJumpMultiplier)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Movement.WalkJumpMultiplier));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceWalkJumpMultiplier(float newValue) {
        var index = GameComponentsLookup.WalkJumpMultiplier;
        var component = (Code.ECS.Gameplay.Features.Movement.WalkJumpMultiplier)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Movement.WalkJumpMultiplier));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveWalkJumpMultiplier() {
        RemoveComponent(GameComponentsLookup.WalkJumpMultiplier);
        return this;
    }
}
