//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTargetCameraRotation;

    public static Entitas.IMatcher<GameEntity> TargetCameraRotation {
        get {
            if (_matcherTargetCameraRotation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TargetCameraRotation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTargetCameraRotation = matcher;
            }

            return _matcherTargetCameraRotation;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.TargetCameraRotation targetCameraRotation { get { return (Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.TargetCameraRotation)GetComponent(GameComponentsLookup.TargetCameraRotation); } }
    public UnityEngine.Vector3 TargetCameraRotation { get { return targetCameraRotation.Value; } }
    public bool hasTargetCameraRotation { get { return HasComponent(GameComponentsLookup.TargetCameraRotation); } }

    public GameEntity AddTargetCameraRotation(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.TargetCameraRotation;
        var component = (Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.TargetCameraRotation)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.TargetCameraRotation));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceTargetCameraRotation(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.TargetCameraRotation;
        var component = (Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.TargetCameraRotation)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.TargetCameraRotation));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveTargetCameraRotation() {
        RemoveComponent(GameComponentsLookup.TargetCameraRotation);
        return this;
    }
}
