//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGunInputKey;

    public static Entitas.IMatcher<GameEntity> GunInputKey {
        get {
            if (_matcherGunInputKey == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GunInputKey);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGunInputKey = matcher;
            }

            return _matcherGunInputKey;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Shoots.GunInputKeyComponent gunInputKey { get { return (Code.ECS.Gameplay.Features.Shoots.GunInputKeyComponent)GetComponent(GameComponentsLookup.GunInputKey); } }
    public Code.Gameplay.Heroes.Enums.GunInputTypeId GunInputKey { get { return gunInputKey.Value; } }
    public bool hasGunInputKey { get { return HasComponent(GameComponentsLookup.GunInputKey); } }

    public GameEntity AddGunInputKey(Code.Gameplay.Heroes.Enums.GunInputTypeId newValue) {
        var index = GameComponentsLookup.GunInputKey;
        var component = (Code.ECS.Gameplay.Features.Shoots.GunInputKeyComponent)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.GunInputKeyComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceGunInputKey(Code.Gameplay.Heroes.Enums.GunInputTypeId newValue) {
        var index = GameComponentsLookup.GunInputKey;
        var component = (Code.ECS.Gameplay.Features.Shoots.GunInputKeyComponent)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.GunInputKeyComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveGunInputKey() {
        RemoveComponent(GameComponentsLookup.GunInputKey);
        return this;
    }
}
