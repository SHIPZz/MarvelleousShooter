//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHits;

    public static Entitas.IMatcher<GameEntity> Hits {
        get {
            if (_matcherHits == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Hits);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHits = matcher;
            }

            return _matcherHits;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Shoots.Hits hits { get { return (Code.ECS.Gameplay.Features.Shoots.Hits)GetComponent(GameComponentsLookup.Hits); } }
    public System.Collections.Generic.List<UnityEngine.RaycastHit> Hits { get { return hits.Value; } }
    public bool hasHits { get { return HasComponent(GameComponentsLookup.Hits); } }

    public GameEntity AddHits(System.Collections.Generic.List<UnityEngine.RaycastHit> newValue) {
        var index = GameComponentsLookup.Hits;
        var component = (Code.ECS.Gameplay.Features.Shoots.Hits)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.Hits));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceHits(System.Collections.Generic.List<UnityEngine.RaycastHit> newValue) {
        var index = GameComponentsLookup.Hits;
        var component = (Code.ECS.Gameplay.Features.Shoots.Hits)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.Hits));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveHits() {
        RemoveComponent(GameComponentsLookup.Hits);
        return this;
    }
}
