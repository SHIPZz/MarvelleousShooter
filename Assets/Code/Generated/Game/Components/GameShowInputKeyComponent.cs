//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherShowInputKey;

    public static Entitas.IMatcher<GameEntity> ShowInputKey {
        get {
            if (_matcherShowInputKey == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ShowInputKey);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherShowInputKey = matcher;
            }

            return _matcherShowInputKey;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Shoots.ShowInputKeyComponent showInputKey { get { return (Code.ECS.Gameplay.Features.Shoots.ShowInputKeyComponent)GetComponent(GameComponentsLookup.ShowInputKey); } }
    public Code.Gameplay.Heroes.Enums.ShootInputTypeId ShowInputKey { get { return showInputKey.Value; } }
    public bool hasShowInputKey { get { return HasComponent(GameComponentsLookup.ShowInputKey); } }

    public GameEntity AddShowInputKey(Code.Gameplay.Heroes.Enums.ShootInputTypeId newValue) {
        var index = GameComponentsLookup.ShowInputKey;
        var component = (Code.ECS.Gameplay.Features.Shoots.ShowInputKeyComponent)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.ShowInputKeyComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceShowInputKey(Code.Gameplay.Heroes.Enums.ShootInputTypeId newValue) {
        var index = GameComponentsLookup.ShowInputKey;
        var component = (Code.ECS.Gameplay.Features.Shoots.ShowInputKeyComponent)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.ShowInputKeyComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveShowInputKey() {
        RemoveComponent(GameComponentsLookup.ShowInputKey);
        return this;
    }
}
