//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurrentShootTypeId;

    public static Entitas.IMatcher<GameEntity> CurrentShootTypeId {
        get {
            if (_matcherCurrentShootTypeId == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurrentShootTypeId);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurrentShootTypeId = matcher;
            }

            return _matcherCurrentShootTypeId;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Shoots.CurrentShootTypeId currentShootTypeId { get { return (Code.ECS.Gameplay.Features.Shoots.CurrentShootTypeId)GetComponent(GameComponentsLookup.CurrentShootTypeId); } }
    public Code.ECS.Gameplay.Features.Shoots.Enums.ShootTypeId CurrentShootTypeId { get { return currentShootTypeId.Value; } }
    public bool hasCurrentShootTypeId { get { return HasComponent(GameComponentsLookup.CurrentShootTypeId); } }

    public GameEntity AddCurrentShootTypeId(Code.ECS.Gameplay.Features.Shoots.Enums.ShootTypeId newValue) {
        var index = GameComponentsLookup.CurrentShootTypeId;
        var component = (Code.ECS.Gameplay.Features.Shoots.CurrentShootTypeId)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.CurrentShootTypeId));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCurrentShootTypeId(Code.ECS.Gameplay.Features.Shoots.Enums.ShootTypeId newValue) {
        var index = GameComponentsLookup.CurrentShootTypeId;
        var component = (Code.ECS.Gameplay.Features.Shoots.CurrentShootTypeId)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.CurrentShootTypeId));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCurrentShootTypeId() {
        RemoveComponent(GameComponentsLookup.CurrentShootTypeId);
        return this;
    }
}
