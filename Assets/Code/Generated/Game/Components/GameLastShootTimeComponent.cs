//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLastShootTime;

    public static Entitas.IMatcher<GameEntity> LastShootTime {
        get {
            if (_matcherLastShootTime == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LastShootTime);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLastShootTime = matcher;
            }

            return _matcherLastShootTime;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Shoots.LastShootTime lastShootTime { get { return (Code.ECS.Gameplay.Features.Shoots.LastShootTime)GetComponent(GameComponentsLookup.LastShootTime); } }
    public float LastShootTime { get { return lastShootTime.Value; } }
    public bool hasLastShootTime { get { return HasComponent(GameComponentsLookup.LastShootTime); } }

    public GameEntity AddLastShootTime(float newValue) {
        var index = GameComponentsLookup.LastShootTime;
        var component = (Code.ECS.Gameplay.Features.Shoots.LastShootTime)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.LastShootTime));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceLastShootTime(float newValue) {
        var index = GameComponentsLookup.LastShootTime;
        var component = (Code.ECS.Gameplay.Features.Shoots.LastShootTime)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.LastShootTime));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveLastShootTime() {
        RemoveComponent(GameComponentsLookup.LastShootTime);
        return this;
    }
}
