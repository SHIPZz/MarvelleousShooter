//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRestoreHp;

    public static Entitas.IMatcher<GameEntity> RestoreHp {
        get {
            if (_matcherRestoreHp == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RestoreHp);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRestoreHp = matcher;
            }

            return _matcherRestoreHp;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Lifetime.RestoreHp restoreHp { get { return (Code.ECS.Gameplay.Features.Lifetime.RestoreHp)GetComponent(GameComponentsLookup.RestoreHp); } }
    public float RestoreHp { get { return restoreHp.Value; } }
    public bool hasRestoreHp { get { return HasComponent(GameComponentsLookup.RestoreHp); } }

    public GameEntity AddRestoreHp(float newValue) {
        var index = GameComponentsLookup.RestoreHp;
        var component = (Code.ECS.Gameplay.Features.Lifetime.RestoreHp)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Lifetime.RestoreHp));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceRestoreHp(float newValue) {
        var index = GameComponentsLookup.RestoreHp;
        var component = (Code.ECS.Gameplay.Features.Lifetime.RestoreHp)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Lifetime.RestoreHp));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveRestoreHp() {
        RemoveComponent(GameComponentsLookup.RestoreHp);
        return this;
    }
}
