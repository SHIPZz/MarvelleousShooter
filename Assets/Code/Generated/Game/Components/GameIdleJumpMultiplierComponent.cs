//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherIdleJumpMultiplier;

    public static Entitas.IMatcher<GameEntity> IdleJumpMultiplier {
        get {
            if (_matcherIdleJumpMultiplier == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.IdleJumpMultiplier);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherIdleJumpMultiplier = matcher;
            }

            return _matcherIdleJumpMultiplier;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Movement.IdleJumpMultiplier idleJumpMultiplier { get { return (Code.ECS.Gameplay.Features.Movement.IdleJumpMultiplier)GetComponent(GameComponentsLookup.IdleJumpMultiplier); } }
    public float IdleJumpMultiplier { get { return idleJumpMultiplier.Value; } }
    public bool hasIdleJumpMultiplier { get { return HasComponent(GameComponentsLookup.IdleJumpMultiplier); } }

    public GameEntity AddIdleJumpMultiplier(float newValue) {
        var index = GameComponentsLookup.IdleJumpMultiplier;
        var component = (Code.ECS.Gameplay.Features.Movement.IdleJumpMultiplier)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Movement.IdleJumpMultiplier));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceIdleJumpMultiplier(float newValue) {
        var index = GameComponentsLookup.IdleJumpMultiplier;
        var component = (Code.ECS.Gameplay.Features.Movement.IdleJumpMultiplier)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Movement.IdleJumpMultiplier));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveIdleJumpMultiplier() {
        RemoveComponent(GameComponentsLookup.IdleJumpMultiplier);
        return this;
    }
}
