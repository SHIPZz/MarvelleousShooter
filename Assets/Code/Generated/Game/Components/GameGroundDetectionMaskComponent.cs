//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGroundDetectionMask;

    public static Entitas.IMatcher<GameEntity> GroundDetectionMask {
        get {
            if (_matcherGroundDetectionMask == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GroundDetectionMask);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGroundDetectionMask = matcher;
            }

            return _matcherGroundDetectionMask;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Collisions.GroundDetectionMask groundDetectionMask { get { return (Code.ECS.Gameplay.Features.Collisions.GroundDetectionMask)GetComponent(GameComponentsLookup.GroundDetectionMask); } }
    public UnityEngine.LayerMask GroundDetectionMask { get { return groundDetectionMask.Value; } }
    public bool hasGroundDetectionMask { get { return HasComponent(GameComponentsLookup.GroundDetectionMask); } }

    public GameEntity AddGroundDetectionMask(UnityEngine.LayerMask newValue) {
        var index = GameComponentsLookup.GroundDetectionMask;
        var component = (Code.ECS.Gameplay.Features.Collisions.GroundDetectionMask)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Collisions.GroundDetectionMask));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceGroundDetectionMask(UnityEngine.LayerMask newValue) {
        var index = GameComponentsLookup.GroundDetectionMask;
        var component = (Code.ECS.Gameplay.Features.Collisions.GroundDetectionMask)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Collisions.GroundDetectionMask));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveGroundDetectionMask() {
        RemoveComponent(GameComponentsLookup.GroundDetectionMask);
        return this;
    }
}
