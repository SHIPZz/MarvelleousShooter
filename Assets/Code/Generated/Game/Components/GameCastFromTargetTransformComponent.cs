//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCastFromTargetTransform;

    public static Entitas.IMatcher<GameEntity> CastFromTargetTransform {
        get {
            if (_matcherCastFromTargetTransform == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CastFromTargetTransform);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCastFromTargetTransform = matcher;
            }

            return _matcherCastFromTargetTransform;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.TargetCollection.CastFromTargetTransform castFromTargetTransform { get { return (Code.ECS.Gameplay.Features.TargetCollection.CastFromTargetTransform)GetComponent(GameComponentsLookup.CastFromTargetTransform); } }
    public UnityEngine.Transform CastFromTargetTransform { get { return castFromTargetTransform.Value; } }
    public bool hasCastFromTargetTransform { get { return HasComponent(GameComponentsLookup.CastFromTargetTransform); } }

    public GameEntity AddCastFromTargetTransform(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.CastFromTargetTransform;
        var component = (Code.ECS.Gameplay.Features.TargetCollection.CastFromTargetTransform)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.TargetCollection.CastFromTargetTransform));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCastFromTargetTransform(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.CastFromTargetTransform;
        var component = (Code.ECS.Gameplay.Features.TargetCollection.CastFromTargetTransform)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.TargetCollection.CastFromTargetTransform));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCastFromTargetTransform() {
        RemoveComponent(GameComponentsLookup.CastFromTargetTransform);
        return this;
    }
}
