//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPatterns;

    public static Entitas.IMatcher<GameEntity> Patterns {
        get {
            if (_matcherPatterns == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Patterns);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPatterns = matcher;
            }

            return _matcherPatterns;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.Patterns patterns { get { return (Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.Patterns)GetComponent(GameComponentsLookup.Patterns); } }
    public UnityEngine.Vector2[] Patterns { get { return patterns.Value; } }
    public bool hasPatterns { get { return HasComponent(GameComponentsLookup.Patterns); } }

    public GameEntity AddPatterns(UnityEngine.Vector2[] newValue) {
        var index = GameComponentsLookup.Patterns;
        var component = (Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.Patterns)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.Patterns));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplacePatterns(UnityEngine.Vector2[] newValue) {
        var index = GameComponentsLookup.Patterns;
        var component = (Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.Patterns)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.Patterns));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemovePatterns() {
        RemoveComponent(GameComponentsLookup.Patterns);
        return this;
    }
}
