//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPullProducerId;

    public static Entitas.IMatcher<GameEntity> PullProducerId {
        get {
            if (_matcherPullProducerId == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PullProducerId);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPullProducerId = matcher;
            }

            return _matcherPullProducerId;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Pull.PullProducerId pullProducerId { get { return (Code.ECS.Gameplay.Features.Pull.PullProducerId)GetComponent(GameComponentsLookup.PullProducerId); } }
    public int PullProducerId { get { return pullProducerId.Value; } }
    public bool hasPullProducerId { get { return HasComponent(GameComponentsLookup.PullProducerId); } }

    public GameEntity AddPullProducerId(int newValue) {
        var index = GameComponentsLookup.PullProducerId;
        var component = (Code.ECS.Gameplay.Features.Pull.PullProducerId)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Pull.PullProducerId));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplacePullProducerId(int newValue) {
        var index = GameComponentsLookup.PullProducerId;
        var component = (Code.ECS.Gameplay.Features.Pull.PullProducerId)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Pull.PullProducerId));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemovePullProducerId() {
        RemoveComponent(GameComponentsLookup.PullProducerId);
        return this;
    }
}
