//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDeathAnimationDuration;

    public static Entitas.IMatcher<GameEntity> DeathAnimationDuration {
        get {
            if (_matcherDeathAnimationDuration == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DeathAnimationDuration);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDeathAnimationDuration = matcher;
            }

            return _matcherDeathAnimationDuration;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Lifetime.DeathAnimationDuration deathAnimationDuration { get { return (Code.ECS.Gameplay.Features.Lifetime.DeathAnimationDuration)GetComponent(GameComponentsLookup.DeathAnimationDuration); } }
    public float DeathAnimationDuration { get { return deathAnimationDuration.Value; } }
    public bool hasDeathAnimationDuration { get { return HasComponent(GameComponentsLookup.DeathAnimationDuration); } }

    public GameEntity AddDeathAnimationDuration(float newValue) {
        var index = GameComponentsLookup.DeathAnimationDuration;
        var component = (Code.ECS.Gameplay.Features.Lifetime.DeathAnimationDuration)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Lifetime.DeathAnimationDuration));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceDeathAnimationDuration(float newValue) {
        var index = GameComponentsLookup.DeathAnimationDuration;
        var component = (Code.ECS.Gameplay.Features.Lifetime.DeathAnimationDuration)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Lifetime.DeathAnimationDuration));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveDeathAnimationDuration() {
        RemoveComponent(GameComponentsLookup.DeathAnimationDuration);
        return this;
    }
}
