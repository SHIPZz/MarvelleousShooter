//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAvailableGuns;

    public static Entitas.IMatcher<GameEntity> AvailableGuns {
        get {
            if (_matcherAvailableGuns == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AvailableGuns);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAvailableGuns = matcher;
            }

            return _matcherAvailableGuns;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Shoots.AvailableGuns availableGuns { get { return (Code.ECS.Gameplay.Features.Shoots.AvailableGuns)GetComponent(GameComponentsLookup.AvailableGuns); } }
    public System.Collections.Generic.List<Code.ECS.Gameplay.Features.Shoots.Enums.GunTypeId> AvailableGuns { get { return availableGuns.Value; } }
    public bool hasAvailableGuns { get { return HasComponent(GameComponentsLookup.AvailableGuns); } }

    public GameEntity AddAvailableGuns(System.Collections.Generic.List<Code.ECS.Gameplay.Features.Shoots.Enums.GunTypeId> newValue) {
        var index = GameComponentsLookup.AvailableGuns;
        var component = (Code.ECS.Gameplay.Features.Shoots.AvailableGuns)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.AvailableGuns));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceAvailableGuns(System.Collections.Generic.List<Code.ECS.Gameplay.Features.Shoots.Enums.GunTypeId> newValue) {
        var index = GameComponentsLookup.AvailableGuns;
        var component = (Code.ECS.Gameplay.Features.Shoots.AvailableGuns)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.AvailableGuns));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveAvailableGuns() {
        RemoveComponent(GameComponentsLookup.AvailableGuns);
        return this;
    }
}
