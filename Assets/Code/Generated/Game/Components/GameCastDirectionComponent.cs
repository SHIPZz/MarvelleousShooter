//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCastDirection;

    public static Entitas.IMatcher<GameEntity> CastDirection {
        get {
            if (_matcherCastDirection == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CastDirection);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCastDirection = matcher;
            }

            return _matcherCastDirection;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.TargetCollection.CastDirection castDirection { get { return (Code.ECS.Gameplay.Features.TargetCollection.CastDirection)GetComponent(GameComponentsLookup.CastDirection); } }
    public UnityEngine.Vector3 CastDirection { get { return castDirection.Value; } }
    public bool hasCastDirection { get { return HasComponent(GameComponentsLookup.CastDirection); } }

    public GameEntity AddCastDirection(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.CastDirection;
        var component = (Code.ECS.Gameplay.Features.TargetCollection.CastDirection)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.TargetCollection.CastDirection));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCastDirection(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.CastDirection;
        var component = (Code.ECS.Gameplay.Features.TargetCollection.CastDirection)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.TargetCollection.CastDirection));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCastDirection() {
        RemoveComponent(GameComponentsLookup.CastDirection);
        return this;
    }
}
