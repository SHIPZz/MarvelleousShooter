//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGunTypeId;

    public static Entitas.IMatcher<GameEntity> GunTypeId {
        get {
            if (_matcherGunTypeId == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GunTypeId);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGunTypeId = matcher;
            }

            return _matcherGunTypeId;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Shoots.GunTypeIdComponent gunTypeId { get { return (Code.ECS.Gameplay.Features.Shoots.GunTypeIdComponent)GetComponent(GameComponentsLookup.GunTypeId); } }
    public Code.ECS.Gameplay.Features.Shoots.Enums.GunTypeId GunTypeId { get { return gunTypeId.Value; } }
    public bool hasGunTypeId { get { return HasComponent(GameComponentsLookup.GunTypeId); } }

    public GameEntity AddGunTypeId(Code.ECS.Gameplay.Features.Shoots.Enums.GunTypeId newValue) {
        var index = GameComponentsLookup.GunTypeId;
        var component = (Code.ECS.Gameplay.Features.Shoots.GunTypeIdComponent)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.GunTypeIdComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceGunTypeId(Code.ECS.Gameplay.Features.Shoots.Enums.GunTypeId newValue) {
        var index = GameComponentsLookup.GunTypeId;
        var component = (Code.ECS.Gameplay.Features.Shoots.GunTypeIdComponent)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.GunTypeIdComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveGunTypeId() {
        RemoveComponent(GameComponentsLookup.GunTypeId);
        return this;
    }
}
