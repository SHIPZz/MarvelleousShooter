//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMaxHorizontalRecoilOnJump;

    public static Entitas.IMatcher<GameEntity> MaxHorizontalRecoilOnJump {
        get {
            if (_matcherMaxHorizontalRecoilOnJump == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MaxHorizontalRecoilOnJump);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMaxHorizontalRecoilOnJump = matcher;
            }

            return _matcherMaxHorizontalRecoilOnJump;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.MaxHorizontalRecoilOnJump maxHorizontalRecoilOnJump { get { return (Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.MaxHorizontalRecoilOnJump)GetComponent(GameComponentsLookup.MaxHorizontalRecoilOnJump); } }
    public float MaxHorizontalRecoilOnJump { get { return maxHorizontalRecoilOnJump.Value; } }
    public bool hasMaxHorizontalRecoilOnJump { get { return HasComponent(GameComponentsLookup.MaxHorizontalRecoilOnJump); } }

    public GameEntity AddMaxHorizontalRecoilOnJump(float newValue) {
        var index = GameComponentsLookup.MaxHorizontalRecoilOnJump;
        var component = (Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.MaxHorizontalRecoilOnJump)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.MaxHorizontalRecoilOnJump));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceMaxHorizontalRecoilOnJump(float newValue) {
        var index = GameComponentsLookup.MaxHorizontalRecoilOnJump;
        var component = (Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.MaxHorizontalRecoilOnJump)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.Systems.Recoil.MaxHorizontalRecoilOnJump));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveMaxHorizontalRecoilOnJump() {
        RemoveComponent(GameComponentsLookup.MaxHorizontalRecoilOnJump);
        return this;
    }
}
