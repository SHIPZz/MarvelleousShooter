//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnimancerAnimator;

    public static Entitas.IMatcher<GameEntity> AnimancerAnimator {
        get {
            if (_matcherAnimancerAnimator == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnimancerAnimator);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnimancerAnimator = matcher;
            }

            return _matcherAnimancerAnimator;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Common.AnimancerAnimator animancerAnimator { get { return (Code.ECS.Common.AnimancerAnimator)GetComponent(GameComponentsLookup.AnimancerAnimator); } }
    public Code.ECS.Gameplay.Features.Animations.AnimancerAnimatorPlayer AnimancerAnimator { get { return animancerAnimator.Value; } }
    public bool hasAnimancerAnimator { get { return HasComponent(GameComponentsLookup.AnimancerAnimator); } }

    public GameEntity AddAnimancerAnimator(Code.ECS.Gameplay.Features.Animations.AnimancerAnimatorPlayer newValue) {
        var index = GameComponentsLookup.AnimancerAnimator;
        var component = (Code.ECS.Common.AnimancerAnimator)CreateComponent(index, typeof(Code.ECS.Common.AnimancerAnimator));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceAnimancerAnimator(Code.ECS.Gameplay.Features.Animations.AnimancerAnimatorPlayer newValue) {
        var index = GameComponentsLookup.AnimancerAnimator;
        var component = (Code.ECS.Common.AnimancerAnimator)CreateComponent(index, typeof(Code.ECS.Common.AnimancerAnimator));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveAnimancerAnimator() {
        RemoveComponent(GameComponentsLookup.AnimancerAnimator);
        return this;
    }
}
