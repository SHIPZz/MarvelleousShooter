//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherShootTypeId;

    public static Entitas.IMatcher<GameEntity> ShootTypeId {
        get {
            if (_matcherShootTypeId == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ShootTypeId);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherShootTypeId = matcher;
            }

            return _matcherShootTypeId;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.ECS.Gameplay.Features.Shoots.ShootTypeIdComponent shootTypeId { get { return (Code.ECS.Gameplay.Features.Shoots.ShootTypeIdComponent)GetComponent(GameComponentsLookup.ShootTypeId); } }
    public Code.Gameplay.Shootables.ShootTypeId ShootTypeId { get { return shootTypeId.Value; } }
    public bool hasShootTypeId { get { return HasComponent(GameComponentsLookup.ShootTypeId); } }

    public GameEntity AddShootTypeId(Code.Gameplay.Shootables.ShootTypeId newValue) {
        var index = GameComponentsLookup.ShootTypeId;
        var component = (Code.ECS.Gameplay.Features.Shoots.ShootTypeIdComponent)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.ShootTypeIdComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceShootTypeId(Code.Gameplay.Shootables.ShootTypeId newValue) {
        var index = GameComponentsLookup.ShootTypeId;
        var component = (Code.ECS.Gameplay.Features.Shoots.ShootTypeIdComponent)CreateComponent(index, typeof(Code.ECS.Gameplay.Features.Shoots.ShootTypeIdComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveShootTypeId() {
        RemoveComponent(GameComponentsLookup.ShootTypeId);
        return this;
    }
}
